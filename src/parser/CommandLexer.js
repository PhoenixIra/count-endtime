"use strict";
// Generated from Command.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.CommandLexer = void 0;
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var CommandLexer = /** @class */ (function (_super) {
    __extends(CommandLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function CommandLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(CommandLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(CommandLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return CommandLexer.VOCABULARY;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "Command.g4"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return CommandLexer.ruleNames; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return CommandLexer._serializedATN; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer.prototype, "channelNames", {
        // @Override
        get: function () { return CommandLexer.channelNames; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer.prototype, "modeNames", {
        // @Override
        get: function () { return CommandLexer.modeNames; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommandLexer, "_ATN", {
        get: function () {
            if (!CommandLexer.__ATN) {
                CommandLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(CommandLexer._serializedATN));
            }
            return CommandLexer.__ATN;
        },
        enumerable: false,
        configurable: true
    });
    CommandLexer.T__0 = 1;
    CommandLexer.T__1 = 2;
    CommandLexer.T__2 = 3;
    CommandLexer.T__3 = 4;
    CommandLexer.T__4 = 5;
    CommandLexer.T__5 = 6;
    CommandLexer.T__6 = 7;
    CommandLexer.T__7 = 8;
    CommandLexer.T__8 = 9;
    CommandLexer.T__9 = 10;
    CommandLexer.T__10 = 11;
    CommandLexer.T__11 = 12;
    CommandLexer.T__12 = 13;
    CommandLexer.TIME = 14;
    CommandLexer.DATE = 15;
    CommandLexer.STRING = 16;
    // tslint:disable:no-trailing-whitespace
    CommandLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    CommandLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    CommandLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "TIME", "DATE", "STRING",
    ];
    CommandLexer._LITERAL_NAMES = [
        undefined, "'.locale '", "'.now'", "'.load '", "'.time '", "'.date '",
        "'.datetime '", "' '", "' countdown in Title'", "'as'", "' countdown'",
        "' to '", "' save '", "' print'",
    ];
    CommandLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        "TIME", "DATE", "STRING",
    ];
    CommandLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(CommandLexer._LITERAL_NAMES, CommandLexer._SYMBOLIC_NAMES, []);
    CommandLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x12\xB9\b\x01" +
        "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
        "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
        "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x03\x02\x03" +
        "\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
        "\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
        "\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
        "\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
        "\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
        "\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
        "\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03" +
        "\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
        "\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
        "\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x05" +
        "\x0F\x8B\n\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0F\x90\n\x0F\x03\x0F\x03\x0F" +
        "\x03\x0F\x05\x0F\x95\n\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0F\x9A\n\x0F\x03" +
        "\x0F\x05\x0F\x9D\n\x0F\x05\x0F\x9F\n\x0F\x05\x0F\xA1\n\x0F\x03\x10\x03" +
        "\x10\x05\x10\xA5\n\x10\x03\x10\x03\x10\x03\x10\x05\x10\xAA\n\x10\x03\x10" +
        "\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\xB1\n\x10\x05\x10\xB3\n\x10\x03" +
        "\x11\x06\x11\xB6\n\x11\r\x11\x0E\x11\xB7\x02\x02\x02\x12\x03\x02\x03\x05" +
        "\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
        "\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
        "\x11!\x02\x12\x03\x02\x04\x03\x022;\x05\x022;C\\c|\x02\xC4\x02\x03\x03" +
        "\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
        "\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
        "\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
        "\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
        "\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
        "\x02\x02\x03#\x03\x02\x02\x02\x05,\x03\x02\x02\x02\x071\x03\x02\x02\x02" +
        "\t8\x03\x02\x02\x02\v?\x03\x02\x02\x02\rF\x03\x02\x02\x02\x0FQ\x03\x02" +
        "\x02\x02\x11S\x03\x02\x02\x02\x13g\x03\x02\x02\x02\x15j\x03\x02\x02\x02" +
        "\x17u\x03\x02\x02\x02\x19z\x03\x02\x02\x02\x1B\x81\x03\x02\x02\x02\x1D" +
        "\x88\x03\x02\x02\x02\x1F\xA2\x03\x02\x02\x02!\xB5\x03\x02\x02\x02#$\x07" +
        "0\x02\x02$%\x07n\x02\x02%&\x07q\x02\x02&\'\x07e\x02\x02\'(\x07c\x02\x02" +
        "()\x07n\x02\x02)*\x07g\x02\x02*+\x07\"\x02\x02+\x04\x03\x02\x02\x02,-" +
        "\x070\x02\x02-.\x07p\x02\x02./\x07q\x02\x02/0\x07y\x02\x020\x06\x03\x02" +
        "\x02\x0212\x070\x02\x0223\x07n\x02\x0234\x07q\x02\x0245\x07c\x02\x025" +
        "6\x07f\x02\x0267\x07\"\x02\x027\b\x03\x02\x02\x0289\x070\x02\x029:\x07" +
        "v\x02\x02:;\x07k\x02\x02;<\x07o\x02\x02<=\x07g\x02\x02=>\x07\"\x02\x02" +
        ">\n\x03\x02\x02\x02?@\x070\x02\x02@A\x07f\x02\x02AB\x07c\x02\x02BC\x07" +
        "v\x02\x02CD\x07g\x02\x02DE\x07\"\x02\x02E\f\x03\x02\x02\x02FG\x070\x02" +
        "\x02GH\x07f\x02\x02HI\x07c\x02\x02IJ\x07v\x02\x02JK\x07g\x02\x02KL\x07" +
        "v\x02\x02LM\x07k\x02\x02MN\x07o\x02\x02NO\x07g\x02\x02OP\x07\"\x02\x02" +
        "P\x0E\x03\x02\x02\x02QR\x07\"\x02\x02R\x10\x03\x02\x02\x02ST\x07\"\x02" +
        "\x02TU\x07e\x02\x02UV\x07q\x02\x02VW\x07w\x02\x02WX\x07p\x02\x02XY\x07" +
        "v\x02\x02YZ\x07f\x02\x02Z[\x07q\x02\x02[\\\x07y\x02\x02\\]\x07p\x02\x02" +
        "]^\x07\"\x02\x02^_\x07k\x02\x02_`\x07p\x02\x02`a\x07\"\x02\x02ab\x07V" +
        "\x02\x02bc\x07k\x02\x02cd\x07v\x02\x02de\x07n\x02\x02ef\x07g\x02\x02f" +
        "\x12\x03\x02\x02\x02gh\x07c\x02\x02hi\x07u\x02\x02i\x14\x03\x02\x02\x02" +
        "jk\x07\"\x02\x02kl\x07e\x02\x02lm\x07q\x02\x02mn\x07w\x02\x02no\x07p\x02" +
        "\x02op\x07v\x02\x02pq\x07f\x02\x02qr\x07q\x02\x02rs\x07y\x02\x02st\x07" +
        "p\x02\x02t\x16\x03\x02\x02\x02uv\x07\"\x02\x02vw\x07v\x02\x02wx\x07q\x02" +
        "\x02xy\x07\"\x02\x02y\x18\x03\x02\x02\x02z{\x07\"\x02\x02{|\x07u\x02\x02" +
        "|}\x07c\x02\x02}~\x07x\x02\x02~\x7F\x07g\x02\x02\x7F\x80\x07\"\x02\x02" +
        "\x80\x1A\x03\x02\x02\x02\x81\x82\x07\"\x02\x02\x82\x83\x07r\x02\x02\x83" +
        "\x84\x07t\x02\x02\x84\x85\x07k\x02\x02\x85\x86\x07p\x02\x02\x86\x87\x07" +
        "v\x02\x02\x87\x1C\x03\x02\x02\x02\x88\x8A\t\x02\x02\x02\x89\x8B\t\x02" +
        "\x02\x02\x8A\x89\x03\x02\x02\x02\x8A\x8B\x03\x02\x02\x02\x8B\x8C\x03\x02" +
        "\x02\x02\x8C\x8D\x07<\x02\x02\x8D\x8F\t\x02\x02\x02\x8E\x90\t\x02\x02" +
        "\x02\x8F\x8E\x03\x02\x02\x02\x8F\x90\x03\x02\x02\x02\x90\xA0\x03\x02\x02" +
        "\x02\x91\x92\x07<\x02\x02\x92\x94\t\x02\x02\x02\x93\x95\t\x02\x02\x02" +
        "\x94\x93\x03\x02\x02\x02\x94\x95\x03\x02\x02\x02\x95\x9E\x03\x02\x02\x02" +
        "\x96\x97\x07<\x02\x02\x97\x99\t\x02\x02\x02\x98\x9A\t\x02\x02\x02\x99" +
        "\x98\x03\x02\x02\x02\x99\x9A\x03\x02\x02\x02\x9A\x9C\x03\x02\x02\x02\x9B" +
        "\x9D\t\x02\x02\x02\x9C\x9B\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D" +
        "\x9F\x03\x02\x02\x02\x9E\x96\x03\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F" +
        "\xA1\x03\x02\x02\x02\xA0\x91\x03\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1" +
        "\x1E\x03\x02\x02\x02\xA2\xA4\t\x02\x02\x02\xA3\xA5\t\x02\x02\x02\xA4\xA3" +
        "\x03\x02\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA7" +
        "\x070\x02\x02\xA7\xA9\t\x02\x02\x02\xA8\xAA\t\x02\x02\x02\xA9\xA8\x03" +
        "\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xAA\xB2\x03\x02\x02\x02\xAB\xAC\x07" +
        "0\x02\x02\xAC\xAD\t\x02\x02\x02\xAD\xB0\t\x02\x02\x02\xAE\xAF\t\x02\x02" +
        "\x02\xAF\xB1\t\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02" +
        "\x02\xB1\xB3\x03\x02\x02\x02\xB2\xAB\x03\x02\x02\x02\xB2\xB3\x03\x02\x02" +
        "\x02\xB3 \x03\x02\x02\x02\xB4\xB6\t\x03\x02\x02\xB5\xB4\x03\x02\x02\x02" +
        "\xB6\xB7\x03\x02\x02\x02\xB7\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02" +
        "\xB8\"\x03\x02\x02\x02\x0F\x02\x8A\x8F\x94\x99\x9C\x9E\xA0\xA4\xA9\xB0" +
        "\xB2\xB7\x02";
    return CommandLexer;
}(Lexer_1.Lexer));
exports.CommandLexer = CommandLexer;
